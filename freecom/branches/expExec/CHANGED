Update #7:
fix: skippath(): accepting '.'
fix: open output redirection: append & overwrite switched
fix: type in cmdtable.c prevents FD
fix: get_redirection(): compare with redir[i]
fix: overwrite mmode in cmdinput.c
fix: typo: bad_var
fix: FOR: normmal env var detection screws up varE

Update #6:
chg: cbreak <-> using doExit/Quit/Cancel, no modes
chg: CTXT_TAG_EXEC renamed to CTXT_TAG_FLAG
fix: %@VERBATIM(): uses verbatim & verbatim_token to communicate with
	expEnvVars()
fix: cmd_for(): To reset the variable to its previous value must be
	quoted, e.g. by %@VERBATIM()
fix: ecShrink(): 2nd validateTOS() is incorrect, because the new TOS header
	is not initialized so far
chg: renamed variables for FOR: varname, param, cmd
fix: ecMkf(): calculation of varname & cmd based on ctxtMain
fix: forPatchCmdline(): wrong internal <-> external var ident
fix: ecMkf(): prefix == 0
fix: readFORfirst(): wrong return value for ecShrink()
fix: ecMkF(): pre-calculation of length one byte too large
fix: ecMkF(): missing ES_STRING_DELIM between multiple arguments
fix: ecMkF(): assert()'s
fix: cmd_for_hackery(): must strip leading "FOR" keyword

Update #5:
fix: ecMkc()/ecMkvcmd(): Ignore-Exit commands tagged as normal ones
fix: ctxtChgSize(): clear environment if newly created
fix: ARG: wrong operator to pop old arguments
add: ecPop() & ecMkB(): F(batchlevel)
add: command.c & batch.c: chkHeap
fix: docommand(): name free()'ed and realloc()
fix: qecAction(): no parameter --> no error
chg: beautify: variable names of command lines ::= 'line' , (full) name
	of command ::= name, first word ::= first [to ease debugging]
fix: readbatchline(): 2. dprintf() %ul --> %lu
fix: readbatchline(): fopen(): text mode
fix: readbatchline(): echoBatch = 0
fix: <TAB>: moves cursor behind the replacement text
fix: expandEnvVar: no free() for %1-style variables

Update #4:
fix: Re-allocating the environment may clash with Borland's internal heap
	management and with to allocate the other external memory blocks, when
	no UMBs are available.
bugfix: farcoreleft() is a nonsense function, replaced by a function
	generating the size of the largest allocatable block
bugfix: dprintf(): bugs in contexts like if() dprintf() else
chg: core documentation CMT[378].TXT, ICMDS.TXT
fix: dbg_printmem() if compiled in Large memory model, near is invalid

Initial revision of expExec branch
